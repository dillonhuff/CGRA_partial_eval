//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /Users/dillon/VerilogWorkspace/CGRAGenerator/hardware/generator_z/io1bit/io1bit.vp
//  Source template: io1bit
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
// Parameter side 	= 2
// Parameter io_group 	= 1
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

// io_group (_GENESIS2_INHERITANCE_PRIORITY_) = 1
//
// side (_GENESIS2_INHERITANCE_PRIORITY_) = 2
//


module io1bit_unq3 (
clk, 
reset,
pad,
p2f,
f2p,
config_addr,
config_data,
tile_id
);

  /* verilator lint_off UNUSED */
  input  clk;
  input  reset;
  inout  pad;
  output p2f;
  input f2p;
  input [31:0] config_data;
  input [31:0] config_addr;
  input [15:0] tile_id;
  /* verilator lint_on UNUSED */



  reg config_en_pe;
  always @(*) begin
    if (reset) begin
       config_en_pe = 1'b0;
    end else begin
       if ((config_addr[15:0]==tile_id)&&(config_addr[23:16]==8'd0)) begin
         config_en_pe = 1'b1;
       end else begin
         config_en_pe = 1'b0;
       end
    end
  end

  reg io_bit;
  always @(posedge clk or posedge reset) begin
    if (reset==1'b1) begin
       io_bit = 1'b0;
    end else begin
       if (config_en_pe==1'b1) begin
         io_bit = config_data[0];
       end
    end
  end

  assign pad = (io_bit==1'b1)?f2p:1'bz;
  assign p2f = pad;

// mname = io1bit_unq3 = io1bit_unq3
  //assign pad = f2p;


endmodule

//print TILEINFO "        <direction in='0' out='1'>0</direction>\n;
//print TILEINFO "        <input>in_1BIT_S${side}_T0</input>\n";
//print TILEINFO "        <output>out_1BIT_S${side}_T0</output>\n";



